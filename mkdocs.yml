# General
site_name: Shippable Docs
repo_url: https://github.com/Shippable/docs

# Paths
docs_dir: sources
theme_dir: theme/saas

#detect broken links and break the build
strict: true

#Google Analytics
google_analytics: ['UA-50610279-1', 'auto']

# Pages
pages:
  - Getting started:
    - Overview:
      - Why Shippable: index.md
      - Use cases: ./getting-started/shippable-use-cases.md
      - Concepts: getting-started/concepts.md
      - Building blocks: getting-started/building-blocks.md
      - Single Pane of Glass: getting-started/single-pane-of-glass-spog.md
    - What is supported?:
      - Source control providers: getting-started/supported-scms.md
      - Languages: getting-started/supported-languages.md
      - Services: getting-started/supported-services.md
      - Notifications: getting-started/supported-notifications.md
      - Artifact repositories: getting-started/supported-artifact-repositories.md
      - Deployment endpoints: getting-started/supported-deployments.md
    - Managing your plan: getting-started/manage-plan.md
    - Your account:
      - Setting account email: getting-started/set-email.md
      - Managing payment methods: getting-started/manage-payment-methods.md
      - Git identities: getting-started/git-identities.md
      - API tokens: getting-started/api-tokens.md
      - Integrations: getting-started/integrations.md
    - Using your own infrastructure:
      - Overview: getting-started/byon-overview.md
      - Managing nodes: getting-started/byon-manage-node.md
    - Run your first build: ci-sample.md
    - Deploy your first app: cd-sample.md
    - Support: support.md
  - CI:
    - Overview:
      - Why CI?: ./ci/why-continuous-integration.md
      - Enabling a project: ci/enable-project.md
      - Yml structure:  ci/yml-structure.md
      - Triggering your CI job: ci/trigger-job.md
      - Triggering other jobs after CI: ci/trigger-pipeline-jobs.md
    - Preparing your environment:
      - Setting language and runtime: ci/set-language.md
      - Choosing a build image: ci/build-image.md
      - Specifying branches to build: ci/specify-branches.md
      - Working with env variables: ci/env-vars.md
    - Working with services:
      - Overview: ci/services-overview.md
      - CouchDB:  ci/couchdb.md
      - Elasticsearch:  ci/elasticsearch.md
      - Memcached:  ci/memcached.md
      - MongoDB:  ci/mongodb.md
      - MySQL:  ci/mysql.md
      - Neo4j:  ci/neo4j.md
      - PostgreSQL: ci/postgresql.md
      - RabbitMQ: ci/rabbitmq.md
      - Redis:  ci/redis.md
      - Riak: ci/riak.md
      - RethinkDB:  ci/rethinkdb.md
      - Selenium: ci/selenium.md
      - SQLite: ci/sqlite.md
    - Building and testing your project:
      - Configuring your CI: ci/build-and-test.md
      - Running tests in parallel:  ci/parallelize-tests.md
    - Configuring test/code coverage:
      - Overview with default scenario: ci/test-code-coverage-reports.md
      - JaCoCo reports: ci/jacoco-reports.md
    - Sending notifications:
      - Overview: ci/send-notifications.md
      - Sending messages to Slack:  ci/slack-notifications.md
      - Sending messages to Email:  ci/email-notifications.md
      - Sending messages to Hipchat:  ci/hipchat-notifications.md
      - Sending messages to IRC:  ci/irc-notifications.md
    - Pushing artifacts:
      - Overview: ci/push-artifacts.md
      - Push artifacts to S3: ci/push-to-s3.md
      - Push to JFrog Artifactory: ci/push-to-artifactory.md
      - Push Docker image to Docker Hub:  ci/push-docker-hub.md
      - Push Docker image to Amazon ECR:  ci/push-amazon-ecr.md
      - Push Docker image to GCR: ci/push-gcr.md
      - Push Docker image to Quay:  ci/push-quay.md
      - Push Docker image to Docker Private/Trusted registry: ci/push-docker-private-registry.md
    - Deployments:
      - Overview: ci/deployment-overview.md
      - Heroku: ci/deploy-to-heroku.md
      - Amazon EC2: ci/deploy-to-ec2.md
      - AWS Opsworks: ci/deploy-to-aws-opsworks.md
      - AWS EBS:  ci/deploy-to-aws-beanstalk.md
      - Digital Ocean: ci/deploy-to-digital-ocean.md
    - Advanced config:
      - Caching: ci/caching.md
      - Triggering parallel jobs: ci/matrix-builds.md
      - Building pull requests: ci/pull-request-builds.md
      - Skipping a build: ci/skip-builds.md
      - Using git submodules: ci/git-submodules.md
      - Retrying a command: ci/retry-command.md
      - Using SSH keys: ci/ssh-keys.md
      - Customizing timeouts: ci/custom-timeouts.md
      - Console logs: ci/console-logs.md
      - Scheduled builds: ci/scheduled-builds.md
      - Using a custom Docker image: ci/custom-docker-image.md
    - Language guide:
      - Overview: ci/supported-languages.md
      - Node.js: ci/nodejs-continuous-integration.md
      - Python: ci/python-continuous-integration.md
      - Java: ci/java-continuous-integration.md
      - Ruby: ci/ruby-continuous-integration.md
      - Go: ci/go-continuous-integration.md
      - Scala: ci/scala-continuous-integration.md
      - PHP: ci/php-continuous-integration.md
      - Clojure: ci/clojure-continuous-integration.md
      - C/C++: ci/cpp-continuous-integration.md
      - Unsupported languages: ci/unsupported-languages.md
  - Validate:
    - Overview:
      - What is Validate?: validate/devops-validate.md
      - Before you start: validate/before-you-start.md
      - Building blocks: validate/building-blocks.md
      - Triggering jobs: validate/trigger-job.md
      - Sending notifications: validate/send-notifications.md
    - Running integration tests:
      - Overview: validate/running-integration-tests.md
      - Sauce Labs: validate/sauce-labs.md
    - Running performance tests:
      - Overview: validate/running-performance-tests.md
      - Nouvola: validate/nouvola.md
    - Running smoke tests: validate/running-smoke-tests.md
  - Release:
    - Overview:
      - What is release management?: release/devops-release-management.md
      - Before you start: release/before-you-start.md
      - Building blocks: release/building-blocks.md
      - Triggering release jobs: release/trigger-job.md
      - Sending notifications: release/send-notifications.md
    - Creating a release:
      - Overview: release/create-release-overview.md
      - From Single Service/Component: release/single-component.md
      - From Multiple Services/Components: release/mutiple-components.md
      - From upstream releases: release/upstream-releases.md
    - Managing release versions:
      - Overview: release/manage-release-versions.md
      - Setting version number: release/set-version-number.md
      - Incrementing version numbers: release/increment-version-number.md
  - Deploy:
    - Overview:
      - Why deploy?:  deploy/why-deploy.md
      - Before you start: deploy/before-you-start.md
      - Building blocks: deploy/building-blocks.md
      - Triggering deploy jobs: deploy/trigger-job.md
      - Sending notifications: deploy/send-notifications.md
      - Tracing resources: deploy/trace-pipeline.md
    - Deploying to Amazon ECS:
      - Basic scenario: deploy/amazon-ecs.md
      - Deployment strategies: deploy/amazon-ecs-strategy.md
      - Load balancing: deploy/amazon-ecs-elb-alb.md
      - Multi-container applications: deploy/amazon-ecs-multiple-containers.md
      - Utilizing multiple environments: deploy/amazon-ecs-multiple-environments.md
      - Working with state and environment variables: deploy/amazon-ecs-state-env-vars.md
      - Using custom task definitions: deploy/amazon-ecs-custom-task-definitions.md
    - Deploying to Kubernetes:
      - Default scenario: deploy/kubernetes.md
      - Specifying deployment strategy: deploy/kubernetes-strategy.md
      - Using a load balancer:  deploy/kubernetes-loadbalancer.md
      - Deploying multi-container services: deploy/kubernetes-multiple-containers.md
      - Deploying to multiple environments: deploy/kubernetes-multiple-environments.md
      - Working with state and environment variables: deploy/kubernetes-state-env-vars.md
      - Using custom task definition templates: deploy/kubernetes-custom-task-definitions.md
    - Deploying to GKE:
      - Basic scenario: deploy/gke.md
      - Specifying deployment strategy: deploy/gke-strategy.md
      - Load balancing:  deploy/gke-loadbalancer.md
      - Multi-container applications: deploy/gke-multiple-containers.md
      - Utilizing multiple environments: deploy/gke-multiple-environments.md
      - Working with state and environment variables: deploy/gke-state-env-vars.md
      - Using custom pod templates: deploy/gke-custom-pods.md
    - Deploying to Docker Datacenter:
      - Basic scenario: deploy/docker-datacenter.md
    - Deploying to Docker cloud:
      - Basic scenario: deploy/docker-cloud.md
    - Deploying to AWS Elastic Beanstalk:
      - Single-container environments:  deploy/aws-elastic-beanstalk.md
      - Multi-container environments: deploy/aws-elastic-beanstalk-multiple-containers.md
      - Multiple environments: deploy/aws-elastic-beanstalk-multiple-environments.md
      - Working with state and environment variables: deploy/aws-elastic-beanstalk-state-env-vars.md
    - Deploying to a Node Cluster:
      - Basic scenario: deploy/vm-basic.md
      - JFrog Artifactory: deploy/vm-jfrog.md
      - Utilizing multiple environments: deploy/vm-multiple-environments.md
      - Working with state and environment variables: deploy/vm-state-env-vars.md
    - Rolling back deployments: deploy/rollback.md
  - Provision:
    - Overview:
      - What is provisioning: provision/why-infrastructure-provisioning.md
      - Before you start: provision/before-you-start.md
      - Building blocks: provision/building-blocks.md
      - Triggering jobs: provision/trigger-job.md
      - Sending notifications: provision/send-notifications.md
    - Provisioning AWS infrastructure:
      - With Terraform: provision/aws-with-terraform.md
      - With Ansible: provision/aws-with-ansible.md
  - Reference:
    - CI:
      - YML Reference: reference/ci-yml.md
    - Jobs:
      - Overview: reference/jobs-overview.md
      - deploy: reference/job-deploy.md
      - manifest: reference/job-manifest.md
      - provision: reference/job-provision.md
      - release: reference/job-release.md
      - runCI: reference/job-runci.md
      - runCLI: reference/job-runcli.md
      - runSH: reference/job-runsh.md
      - jenkinsJob: reference/job-jenkinsjob.md
    - Resources:
      - Overview: reference/resources-overview.md
      - ciRepo: reference/resource-cirepo.md
      - cliConfig: reference/resource-cliconfig.md
      - cluster: reference/resource-cluster.md
      - dockerOptions: reference/resource-dockeroptions.md
      - file: reference/resource-file.md
      - gitRepo: reference/resource-gitrepo.md
      - image: reference/resource-image.md
      - integration: reference/resource-integration.md
      - loadBalancer: reference/resource-loadbalancer.md
      - notification: reference/resource-notification.md
      - params: reference/resource-params.md
      - replicas: reference/resource-replicas.md
      - syncRepo: reference/resource-syncrepo.md
      - time: reference/resource-time.md
      - version: reference/resource-version.md
    - API:
      - Overview: reference/api-overview.md
    - Machine Images:
      - Overview: reference/machine-images-overview.md
      - v5.4.1: reference/machine-image-v541.md
      - v5.3.2: reference/machine-image-v532.md
      - Stable: reference/machine-image-stable.md
    - Integrations:
      - Overview: reference/integrations-overview.md
      - Amazon ECR: reference/int-amazon-ecr.md
      - Amazon ECS: reference/int-amazon-ecs.md
      - Bitbucket: reference/int-bitbucket.md
      - Bitbucket Server: reference/int-bitbucket-server.md
      - Docker Cloud: reference/int-docker-cloud.md
      - Docker Datacenter: reference/int-docker-datacenter.md
      - Docker Hub: reference/int-docker-hub.md
      - Docker Trusted Registry: reference/int-docker-trusted-registry.md
      - GitHub: reference/int-github.md
      - GitHub Enterprise: reference/int-github-enterprise.md
      - Gitlab: reference/int-gitlab.md
      - Google Container Engine: reference/int-gke.md
      - Google Container Registry: reference/int-gcr.md
      - Hipchat: reference/int-hipchat.md
      - IRC: reference/int-key-ssh.md
      - JFrog Artifactory: reference/int-jfrog-artifactory.md
      - Joyent Triton: reference/int-tripub.md
      - Key-value: reference/int-key-value.md
      - Kubernetes: reference/int-kubernetes.md
      - Node Cluster: reference/int-node-cluster.md
      - PEM Keys: reference/int-key-pem.md
      - Quay.io: reference/int-quay.md
      - Slack: reference/int-slack.md
      - SSH Keys: reference/int-key-ssh.md
